name: Process Redirects and Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  packages: write
  contents: write
  issues: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "updaters"
  cancel-in-progress: false

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  process-redirects:
    name: Creating new redirects
    if: always()
    runs-on: ubuntu-latest
    steps:
      - id: checkout-repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Process redirect files
        run: python scripts/process_redirects.py
        env:
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          git commit -m 'Set redirect files'
          git push origin gh-pages --force
      - uses: actions/cache@v3
        with:
          path: workflow_ids.json
          key: workflow_ids
  update-pages:
    name: Updating github pages
    needs:
      - process-redirects
    if: |
      always() &&
      needs.process-redirects.result == 'success'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  trigger-workflows:
    name: Triggering individual workflows
    needs:
      - update-pages
    if: |
      always() &&
      needs.update-pages.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: workflow_ids.json
          key: workflow_ids
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Dependencies
        run: npm install @octokit/request jsonwebtoken
      - name: Generate JWT
        id: generate_jwt
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > private_key.pem
          echo "APP_ID=${{ secrets.APP_ID }}" >> $GITHUB_ENV
      - name: Read Workflow IDs JSON
        id: read_json
        run: |
          WORKFLOW_IDS=$(cat workflow_ids.json)
          echo "::add-mask::$WORKFLOW_IDS"
          echo "WORKFLOW_IDS=$WORKFLOW_IDS" >> $GITHUB_ENV
      - name: Trigger Workflows
        run: node ./scripts/trigger-workflows.mjs
        env:
          APP_ID: ${{ secrets.APP_ID }}
          WORKFLOW_IDS: ${{ env.WORKFLOW_IDS }}
